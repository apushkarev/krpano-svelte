<krpano>
  
  <prototype name="Button_Bar"
    type="container" 

    height="2"
    bgroundedge="1"

    bgcolor="calc:'0x' + design.text_color"
    bgalpha="1"
  />

  <prototype name="Menu_Item" keep="true"
    align="top"
    type="text" 

    bgcolor="get:design.bg_color2" bgalpha="1"
    bgroundedge="5"

    width="calc:design.menu_width - 2 * design.padding"
    height="get:design.menu_item_height"

    parent="menu"

    linked_menu_list_item=""

    Menu_Item="
      newlayer(%1, %2);

      set(this.linked_menu_list_item, %3);
      copy(this.html, menu_list[%3].caption);
      calc(this.y, (%3 + 1) * design.padding + %3 * design.menu_item_height);
      calc(this.show_delay, %3 * (0.25 / menu_list.count));
      calc(this.hide_delay, (menu_list.count - 1 - %3) * 0.25 / menu_list.count);
    "

    onloaded="
      js( setMenuItemCSS(get(name)) );
    "

    onover="
      tween(bgcolor, get(design.bg_color3), 0.1, default);
    "
    onout="
      tween(bgcolor, get(design.bg_color2), 0.1, default);
    "
    ondown="
      set(oy, 1);
    "
    onup="
      set(oy, 0);
    "

    onclick="
      delayedcall (get(ui_reaction_delay),
        onclick_actions();
      );
    "
    onclick_actions="
      menu.close();
      delayedcall (1,
        console.msg('Происходят другие действия');
      );
    "
  />

  <action name="" type="javascript" autorun="preinit"><![CDATA[
  
    window.setMenuItemCSS = lName => {

      const layer = krpano.layer.getItem(lName);

      layer.css = `
        color: #${krpano.get(`design.text_color`)};
        font-family: Open Sans;
        font-size: 20px;
        font-weight: 300;
        line-height: ${+krpano.get(`design.menu_item_height`) - 6}px;
        padding-left: ${krpano.get(`design.padding`)}px;
      `;
    };
    
  ]]></action>
  
</krpano>
